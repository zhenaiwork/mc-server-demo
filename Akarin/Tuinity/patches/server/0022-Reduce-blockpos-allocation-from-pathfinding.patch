From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <spottedleaf@spottedleaf.dev>
Date: Sat, 25 Apr 2020 17:10:55 -0700
Subject: [PATCH] Reduce blockpos allocation from pathfinding


diff --git a/src/main/java/net/minecraft/server/PathfinderNormal.java b/src/main/java/net/minecraft/server/PathfinderNormal.java
index 4240ca81cb6debecc54dcf9a550e9d916dfa8f9f..61e4dbcd47747f424992291d28a4a725fb3cd709 100644
--- a/src/main/java/net/minecraft/server/PathfinderNormal.java
+++ b/src/main/java/net/minecraft/server/PathfinderNormal.java
@@ -444,7 +444,11 @@ public class PathfinderNormal extends PathfinderAbstract {
     }
 
     protected static PathType c(IBlockAccess iblockaccess, int i, int j, int k) {
-        BlockPosition blockposition = new BlockPosition(i, j, k);
+        // Tuinity start - reduce blockpos allocation
+        BlockPosition.PooledBlockPosition blockposition = BlockPosition.PooledBlockPosition.acquire();
+        try {
+        blockposition.setValues(i, j, k);
+        // Tuinity end - reduce blockpos allocation
         IBlockData iblockdata = iblockaccess.getTypeIfLoaded(blockposition); // Paper
         if (iblockdata == null) return PathType.BLOCKED; // Paper
         Block block = iblockdata.getBlock();
@@ -474,7 +478,7 @@ public class PathfinderNormal extends PathfinderAbstract {
             } else if (block instanceof BlockLeaves) {
                 return PathType.LEAVES;
             } else if (!block.a(TagsBlock.FENCES) && !block.a(TagsBlock.WALLS) && (!(block instanceof BlockFenceGate) || (Boolean) iblockdata.get(BlockFenceGate.OPEN))) {
-                Fluid fluid = iblockaccess.getFluid(blockposition);
+                Fluid fluid = iblockdata.getFluid(); // Tuinity - optimise out world#getFluid
 
                 return fluid.a(TagsFluid.WATER) ? PathType.WATER : (fluid.a(TagsFluid.LAVA) ? PathType.LAVA : (iblockdata.a(iblockaccess, blockposition, PathMode.LAND) ? PathType.OPEN : PathType.BLOCKED));
             } else {
@@ -483,5 +487,10 @@ public class PathfinderNormal extends PathfinderAbstract {
         } else {
             return PathType.TRAPDOOR;
         }
+        // Tuinity start - reduce blockpos allocation
+        } finally {
+            blockposition.close();
+        }
+        // Tuinity end - reduce blockpos allocation
     }
 }
